#!/usr/bin/env bash
set -e

today=$1

webhook='https://cbeiinfra.webhook.office.com/webhookb2/6f585b50-7ceb-4a53-8282-b0fef26f0ec2@42dafca3-27c3-4f25-946e-ac9925c4e6c2/IncomingWebhook/1cbfe74dc2f844ce996a1d24960bf639/6d38c2b0-db98-441c-a338-9f98eb26462b'

if [ ${#1} -lt 1 ] ; then
    echo "Exiting. You must pass a date in the format YYYYmmdd"
    exit
fi



tomorrow=$(date -d "$today +1day" +%Y%m%d)

domain_roms='brz0.05'
version='01g'
ndays=1

# Checking for ROMS+NEMO and WW3 output files. Controlling date is set for 14h of the 
# current day. Crontab is set for 13h and 23h. So, if lesser than 14 check for
# ROMS+NEMO if greater then 14 check for ROMS+GLBY.
printf -v date_controlling '%(%Y%m%d14)T\n' -1
printf -v now '%(%Y%m%d%H)T\n' -1

if [[ $now -lt $date_controlling ]]
then
    roms_his_file_nemo="${store_dir}/roms_his_${domain_roms}_${version}_${today}_nemo.nc"
    roms_rst_file_nemo="${store_dir}/roms_rst_${domain_roms}_${version}_${tomorrow}_nemo.nc"
    ww3_restart1_file="${store_dir}/ww3_rst_atl0.500_${tomorrow}.000000"
    ww3_restart2_file="${store_dir}/ww3_rst_sao0.125_${tomorrow}.000000"
    ww3_restart3_file="${store_dir}/ww3_rst_bca0.025_${tomorrow}.000000"

    files_to_check=(                                                            \
        $roms_his_file_nemo  $ww3_grid1_file $ww3_grid2_file $ww3_grid3_file          \
        $roms_rst_file_nemo  $ww3_restart1_file $ww3_restart2_file $ww3_restart3_file \
    )

else
    # Checking for ROMS+GLBY and WW3 output files
    roms_his_file_glby="${store_dir}/roms_his_${domain_roms}_${version}_${today}_glby.nc"
    roms_rst_file_glby="${store_dir}/roms_rst_${domain_roms}_${version}_${tomorrow}_glby.nc"

    files_to_check=($roms_his_file_glby  $roms_rst_file_glby)
fi


missing_files=()
for file in "${files_to_check[@]}" ; do
    echo "Checking file: $file"
    if [ ! -f "$file" ] ; then
        echo " - file not found"
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -eq 0 ] ; then
    if [[ $now -lt $date_controlling ]]
    then
    curl --location --request POST ${webhook} \
         --header 'Content-Type: application/json' \
         --data "{
                \"@context\": \"https://schema.org/extensions\",
                \"@type\": \"MessageCard\",
                \"themeColor\": \"5BDC60\",                    
                \"title\": \"Sistema operacional completou a rodada diária normalmente\",
                \"text\": \"Aparentemente não houve problemas durante as simulações de ROMS+NEMO e WW3 do dia $(date -d "${today}" +%d/%m/%Y)\",
                }"
    else
        curl --location --request POST ${webhook} \
             --header 'Content-Type: application/json' \
             --data "{
                \"@context\": \"https://schema.org/extensions\",
                \"@type\": \"MessageCard\",
                \"themeColor\": \"5BDC60\",                    
                \"title\": \"Sistema operacional completou a rodada diária normalmente\",
                \"text\": \"Aparentemente não houve problemas durante as simulações de ROMS+GLBY do dia $(date -d "${today}" +%d/%m/%Y)\",
                }"
    fi
                   
elif [ ${#missing_files[@]} -gt 0 ] ; then
    message=""

    message+="\n"
    message+="Missing files:\n\n"
    message+="\n"
    for file in "${missing_files[@]}" ; do
        message+="${file}\n"
    done
    message+="\n\nThis message was autogenerated. Please do not reply it.\n"

    curl --location --request POST ${webhook} \
         --header 'Content-Type: application/json' \
	     --data-raw "{
                    \"@context\": \"https://schema.org/extensions\",
                    \"@type\": \"MessageCard\",
                    \"themeColor\": \"ED1C24\",
                    \"title\": \"Arquivos não encontrados após o fim das simulações\", 
                    \"text\": \"${message}\"
		     }"
fi



# 
# 
# END
# 
# 
